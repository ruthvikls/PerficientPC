<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="INDPRFTCPL1160" failures="0" tests="5" name="com.verifyStoredProcedure.VerifyStoredProcedure" time="0.018" errors="1" timestamp="2023-06-12T20:17:58 IST" skipped="4">
  <testcase classname="com.verifyStoredProcedure.VerifyStoredProcedure" name="compareTablesWithDifferentColumnPositions" time="0.018">
    <error message="Table &#039;classicmodels.table1&#039; doesn&#039;t exist" type="java.sql.SQLSyntaxErrorException">
      <![CDATA[java.sql.SQLSyntaxErrorException: Table 'classicmodels.table1' doesn't exist
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1200)
at com.verifyStoredProcedure.VerifyStoredProcedure.compareTablesWithDifferentColumnPositions(VerifyStoredProcedure.java:92)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- compareTablesWithDifferentColumnPositions -->
  <system-out/>
  <testcase classname="com.verifyStoredProcedure.VerifyStoredProcedure" name="getNumberofCustomers">
    <skipped/>
  </testcase> <!-- getNumberofCustomers -->
  <system-out/>
  <testcase classname="com.verifyStoredProcedure.VerifyStoredProcedure" name="getAllCustomers">
    <skipped/>
  </testcase> <!-- getAllCustomers -->
  <system-out/>
  <testcase classname="com.verifyStoredProcedure.VerifyStoredProcedure" name="verifyStoredProcedureExists">
    <skipped/>
  </testcase> <!-- verifyStoredProcedureExists -->
  <system-out/>
  <testcase classname="com.verifyStoredProcedure.VerifyStoredProcedure" name="compareStoredFunctionResults">
    <skipped/>
  </testcase> <!-- compareStoredFunctionResults -->
  <system-out/>
</testsuite> <!-- com.verifyStoredProcedure.VerifyStoredProcedure -->
